name: Build and Test

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  
  workflow_dispatch: 

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and test on Linux
        if: runner.os == 'Linux'
        run: |
          echo "Installing dependencies on Linux..."
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake swig
          
          echo "Setting up virtual environment..."
          python3 -m venv .venv
          source .venv/bin/activate
          pip install numpy matplotlib colorama
          
          echo "Running build and tests..."
          chmod +x build.sh
          ./build.sh tests


      - name: Install and test on macOS
        if: runner.os == 'macOS'
        run: |
          echo "Installing dependencies on macOS..."
          brew install ninja swig

          echo "Setting up virtual environment..."
          python3 -m venv .venv
          source .venv/bin/activate
          pip install numpy matplotlib colorama

          echo "Running build and tests..."
          chmod +x build.sh
          ./build.sh tests
          

      - name: Install and test on Windows
        if: runner.os == 'Windows'
        run: |
          echo "Installing dependencies on Windows..."
          python -m venv .venv
          .venv\Scripts\activate
          pip install numpy matplotlib colorama
          
          echo "Running build and tests..."
          cmd /c build.bat tests
          
